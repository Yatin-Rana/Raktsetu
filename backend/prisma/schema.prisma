// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int            @id @default(autoincrement())
  name      String
  email     String         @unique
  password  String
  mobile    String         @default("N/A")
  bloodType BloodTypeEnum?
  location  String?
  donations Donation[]
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
   
}

// model Donation {
//   id           Int      @id @default(autoincrement())
//   userId       Int
//   user         User     @relation(fields: [userId], references: [id])
//   donationDate DateTime
//   location     String?
//   notes        String?
//   createdAt    DateTime @default(now())
//   updatedAt    DateTime @updatedAt
// }

enum BloodTypeEnum {
  A_POSITIVE
  A_NEGATIVE
  B_POSITIVE
  B_NEGATIVE
  AB_POSITIVE
  AB_NEGATIVE
  O_POSITIVE
  O_NEGATIVE
}

model Hospital {
  id       Int      @id @default(autoincrement())
  name     String
  address  String
  city     String
  state    String
  zipCode  String
  phone    String
  email    String
  website  String?
  capacity Int
}

model Donation {
  id           Int      @id @default(autoincrement())
  userId       Int
  user         User     @relation(fields: [userId], references: [id])
  donationDate DateTime
  donationType String
  amount       Int      // You can use Int or Decimal depending on the units you use
  location     String
  status       String
  bloodType    String
  campaign     String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@index([userId])
}

model Camp {
  id              Int      @id @default(autoincrement())
  organizerName   String
  phone           String
  location        String
  campDate        DateTime
  expectedDonors  Int
  additionalInfo  String
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}



// model BloodBank {
//   id        Int       @id @default(autoincrement())
//   name      String
//   hospital  Hospital?
//   createdAt DateTime  @default(now())
//   updatedAt DateTime  @updatedAt
// }
